###############################################################################    
##################### ONLY HOUSEKEEPING DATA BELOW THIS!! #####################     
###############################################################################

########### HOUSEKEEPING STATE + DIRFILE SET UP ##########


# define update times (ms)
daq_dt:
    hk: 100.0
    fast: 500.0
    slow: 500.0
    very_slow: 2000.0

# this will crash if this is not greater than or equal to the max daq_dt
#write_dt: 500.0
dirfile_write_dt: 1000
dirfile_spf: 10

# where to put the data. base directory is home
housekeeping_data_directory: 'data/rawdir'
housekeeping_data_link_directory: 'data'
housekeeping_data_link_name: 'dm.lnk'

# where to put the log. base directory is home
log_directory: 'data/log'
log_link_directory: 'data'
log_link_name: 'winter.log'


# define fields.
# Note: each rate must have a corresponding "daq_rate" as given above
fields:
#general:

    count:
        ftype: raw
        label: 'count'
        units: None
        dtype: int64
        rate: slow
        var: 'index'
    timestamp:
        ftype: raw
        label: 'time'
        units: ctime
        dtype: float64
        rate: slow
        var: 'timestamp'
    timestamp_local:
        ftype: raw
        label: 'time'
        units: ctime
        dtype: float64
        rate: slow
        var: 'timestamp_local'
    testcount:
        ftype: raw
        label: 'count'
        units: None
        dtype: float64
        rate: 'hk'
        var: 'counter.state["count"]'
#power statues
    pdu1_1:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][0]'
    pdu1_2:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][1]'
    pdu1_3:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][2]'
    pdu1_4:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][3]'
    pdu1_5:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][4]'
    pdu1_6:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][5]'
    pdu1_7:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][6]'
    pdu1_8:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[1]["status"][7]'
    pdu2_1:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][0]'
    pdu2_2:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][1]'
    pdu2_3:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][2]'
    pdu2_4:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][3]'
    pdu2_5:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][4]'
    pdu2_6:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][5]'
    pdu2_7:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][6]'
    pdu2_8:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[2]["status"][7]'
    pdu3_1:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[3]["status"][0]'
    pdu3_2:
        ftype: raw
        label: 'State'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'powerManager.state[3]["status"][1]'
# site
    site_latitude_degs:
        ftype: raw
        label: Latitude
        units: deg
        dtype: float64
        rate: fast
        var: ephem.lat_deg
    site_longitude_degs:
        ftype: raw
        label: Longitude
        units: deg
        dtype: float64
        rate: fast
        var: ephem.lon_deg
    site_height_meters:
        ftype: raw
        label: Height
        units: m
        dtype: float64
        rate: fast
        var: ephem.height_m
        
#ephemeris
    ephem_timestamp:
        ftype: raw
        label: 'time'
        units: ctime
        dtype: float64
        rate: slow
        var: 'ephem.state["timestamp"]'
    ephem_mjd:
        ftype: raw
        label: 'MJD'
        units: None
        dtype: float64
        rate: slow
        var: "ephem.state['mjd']"
    sun_alt:
        ftype: raw
        label: 'Alt'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['sunalt']"
    sun_rising:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: "ephem.state['sun_rising']"
    moon_alt:
        ftype: raw
        label: 'Alt'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['moonalt']"
    moon_az:
        ftype: raw
        label: 'Az'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['moonaz']"
    ephem_dist_moon:
        ftype: raw
        label: 'Dist'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['ephem_dist_moon']"
    ephem_dist_mercury:
        ftype: raw
        label: 'Dist'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['ephem_dist_mercury']"
    ephem_dist_venus:
        ftype: raw
        label: 'Dist'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['ephem_dist_venus']"
    ephem_dist_mars:
        ftype: raw
        label: 'Dist'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['ephem_dist_mars']"
    ephem_dist_jupiter:
        ftype: raw
        label: 'Dist'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['ephem_dist_jupiter']"
    ephem_dist_saturn:
        ftype: raw
        label: 'Dist'
        units: deg
        dtype: float64
        rate: slow
        var: "ephem.state['ephem_dist_saturn']"
    ephem_in_view:
        ftype: raw
        label: 'State'
        units: deg
        dtype: int64
        rate: slow
        var: "ephem.state['ephem_in_view']"
    ephem_telemetry_connected:
        ftype: raw
        label: 'State'
        units: deg
        dtype: int64
        rate: slow
        var: "ephem.state['telemetry_connected']"
    
    
#schedule
    az_scheduled:
        ftype: raw
        label: 'Az'
        units: deg
        dtype: float64
        rate: slow
        var: "schedule.currentObs['azimuth']"
    alt_scheduled:
        ftype: raw
        label: 'Alt'
        units: deg
        dtype: float64
        rate: slow
        var: "schedule.currentObs['azimuth']"
    remaining_schedule_targets:
        ftype: raw
        label: 'Num'
        units: None
        dtype: int64
        rate: hk
        var: "schedule.remaining_observable_entries"
    
#telescope
    pwi4_version_field0:
        ftype: raw
        label: Version
        units: None
        dtype: float64
        rate: fast
        var: telescope.state["pwi4.version_field[0]"]
    pwi4_version_field1:
        ftype: raw
        label: Version
        units: None
        dtype: float64
        rate: fast
        var: telescope.state["pwi4.version_field[1]"]
    pwi4_version_field2:
        ftype: raw
        label: Version
        units: None
        dtype: float64
        rate: fast
        var: telescope.state["pwi4.version_field[2]"]
    pwi4_version_field3:
        ftype: raw
        label: Version
        units: None
        dtype: float64
        rate: fast
        var: telescope.state["pwi4.version_field[3]"]
    telescope_timestamp_utc:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: fast
        var: telescope.state["response.timestamp_utc"]
    mount_latitude_degs:
        ftype: raw
        label: Latitude
        units: deg
        dtype: float64
        rate: fast
        var: telescope.state["site.latitude_degs"]
    mount_longitude_degs:
        ftype: raw
        label: Longitude
        units: deg
        dtype: float64
        rate: fast
        var: telescope.state["site.longitude_degs"]
    mount_height_meters:
        ftype: raw
        label: Height
        units: m
        dtype: float64
        rate: fast
        var: telescope.state["site.height_meters"]
    mount_lmst_hours:
        ftype: raw
        label: LMST
        units: hours
        dtype: float64
        rate: fast
        var: telescope.state["site.lmst_hours"]
    mount_is_connected:
        ftype: raw
        label: 'MountConnected'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["mount.is_connected"]
    mount_geometry:
        ftype: raw
        label: Mode
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["mount.geometry"]
    mount_timestamp_utc:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: fast
        var: telescope.state["mount.timestamp_utc"]
    mount_jd:
        ftype: raw
        label: 'JD'
        units: None
        dtype: float64
        rate: fast
        var: telescope.state["mount.julian_date"]
    mount_slew_time_constant:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: fast
        var: telescope.state["mount.slew_time_constant"]
    mount_ra_apparent_hours:
        ftype: raw
        label: RA
        units: hours
        dtype: float64
        rate: fast
        var: telescope.state["mount.ra_apparent_hours"]
    mount_dec_apparent_degs:
        ftype: raw
        label: DEC
        units: degs
        dtype: float64
        rate: fast
        var: 'telescope.state["mount.dec_apparent_degs"]'
    mount_ra_j2000_hours:
        ftype: raw
        label: RAJ2000
        units: 'hours'
        dtype: float64
        rate: fast
        var: telescope.state["mount.ra_j2000_hours"]
    mount_dec_j2000_deg:
        ftype: raw
        label: DECJ2000
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.dec_j2000_degs"]
    mount_target_ra_apparent_hours:
        ftype: raw
        label: RA
        units: 'hours'
        dtype: float64
        rate: fast
        var: telescope.state["mount.target_ra_apparent_hours"]
    mount_target_dec_apparent_deg:
        ftype: raw
        label: DEC
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.target_dec_apparent_degs"]
    mount_az_deg:
        ftype: raw
        label: 'Az'
        units: 'deg'
        dtype: float64
        rate: fast
        var: 'telescope.state["mount.azimuth_degs"]'
    mount_alt_deg:
        ftype: raw
        label: 'Alt'
        units: 'deg'
        dtype: float64
        rate: fast
        var: 'telescope.state["mount.altitude_degs"]'
    mount_is_slewing:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: 'telescope.state["mount.is_slewing"]'
    mount_is_tracking:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["mount.is_tracking"]
    mount_field_angle_here:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.field_angle_here_degs"]
    mount_angle_at_target:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.field_angle_at_target_degs"]
    mount_field_angle_rate_at_target:
        ftype: raw
        label: 'rate'
        units: 'dps'
        dtype: float64
        rate: fast
        var: telescope.state["mount.field_angle_rate_at_target_degs_per_sec"]
    mount_path_angle_at_target:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.path_angle_at_target_degs"]
    mount_path_angle_rate_at_target:
        ftype: raw
        label: 'rate'
        units: 'dps'
        dtype: float64
        rate: fast
        var: telescope.state["mount.path_angle_rate_at_target_degs_per_sec"]
    mount_offsets_ra_arcsec_total:
        ftype: raw
        label: 'RA'
        units: 'arcsec'
        dtype: float64
        rate: hk
        var: telescope.state["mount.offsets.ra_arcsec.total"]
    mount_offsets_ra_arcsec_rate:
        ftype: raw
        label: 'RA'
        units: 'arcsecps'
        dtype: float64
        rate: hk
        var: telescope.state["mount.offsets.ra_arcsec.rate"]
    mount_offsets_dec_arcsec_total:
        ftype: raw
        label: 'Dec'
        units: 'arcsec'
        dtype: float64
        rate: hk
        var: telescope.state["mount.offsets.dec_arcsec.total"]
    mount_offsets_dec_arcsec_rate:
        ftype: raw
        label: 'RA'
        units: 'arcsecps'
        dtype: float64
        rate: hk
        var: telescope.state["mount.offsets.dec_arcsec.rate"]
    
    # axis0 = AZ
    mount_az_is_enabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: 'telescope.state["mount.axis0.is_enabled"]'
    mount_az_rms_error:
        ftype: raw
        label: 'Angle'
        units: 'arcsec'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis0.rms_error_arcsec"]
    mount_az_dist_to_target:
        ftype: raw
        label: 'Angle'
        units: 'arcsec'
        dtype: float64
        rate: fast
        var: "telescope.state['mount.axis0.dist_to_target_arcsec']"
    mount_az_servo_error:
        ftype: raw
        label: 'Angle'
        units: 'arcsec'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis0.servo_error_arcsec"]
    mount_az_position:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis0.position_degs"]
    mount_az_position_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis0.position_timestamp"]
    # axis1 = alt
    mount_alt_is_enabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: 'telescope.state["mount.axis1.is_enabled"]'
    mount_alt_rms_error:
        ftype: raw
        label: 'Angle'
        units: 'arcsec'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis1.rms_error_arcsec"]
    mount_alt_dist_to_target:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: 'telescope.state["mount.axis1.dist_to_target_arcsec"]'
    mount_alt_servo_error:
        ftype: raw
        label: 'Angle'
        units: 'arcsec'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis1.servo_error_arcsec"]
    mount_alt_position:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis1.position_degs"]
    mount_alt_position_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: fast
        var: telescope.state["mount.axis1.position_timestamp"]
    # Telescope Sky Model Information
    mount_model_num_points_total:
        ftype: raw
        label: 'number'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["mount.model.num_points_total"]
    mount_model_num_points_enabled:
        ftype: raw
        label: 'number'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["mount.model.num_points_enabled"]
    mount_model_rms_error:
        ftype: raw
        label: 'Angle'
        units: 'arcsec'
        dtype: float64
        rate: fast
        var: telescope.state["mount.model.rms_error_arcsec"]
    # mirror cover
    Mirror_Cover_State:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'mirror_cover.state["mirror_cover_state"]'
    Mirror_Cover_State_timestamp:
        ftype: raw
        label: 'time'
        units: ctime
        dtype: float64
        rate: slow
        var: 'mirror_cover.state["mirror_cover_state_last_timestamp"]'
    Mirror_Cover_Connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'mirror_cover.state["mirror_cover_connected"]'
    Mirror_Cover_Connected_timestamp:
        ftype: raw
        label: 'time'
        units: ctime
        dtype: float64
        rate: slow
        var: 'mirror_cover.state["mirror_cover_connected_last_timestamp"]'

    # focuser
    focuser_is_connected:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["focuser.is_connected"]
    focuser_is_enabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["focuser.is_enabled"]
    focuser_position:
        ftype: raw
        label: 'Position'
        units: 'steps'
        dtype: float64
        rate: fast
        var: telescope.state["focuser.position"]
    focuser_is_moving:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["focuser.is_moving"]
    rotator_is_connected:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["rotator.is_connected"]
    rotator_is_enabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["rotator.is_enabled"]
    rotator_wrap_check_enabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["rotator_wrap_check_enabled"]
    rotator_wrap_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["wrap_status"]
    rotator_mech_position:
        ftype: raw
        label: 'Position'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["rotator.mech_position_degs"]
    rotator_field_angle:
        ftype: raw
        label: 'Angle'
        units: 'deg'
        dtype: float64
        rate: fast
        var: telescope.state["rotator.field_angle_degs"]
    rotator_is_moving:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["rotator.is_moving"]
    rotator_is_slewing:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["rotator.is_slewing"]
    telescope_m3_port:
        ftype: raw
        label: 'Port'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["m3.port"]
    telescope_autofocus_is_running:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["autofocus.is_running"]
    telescope_autofocus_success:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: fast
        var: telescope.state["autofocus.success"]
    telescope_autofocus_best_position:
        ftype: raw
        label: 'Position'
        units: 'steps'
        dtype: float64
        rate: fast
        var: telescope.state["autofocus.best_position"]
    telescope_autofocus_tolerance:
        ftype: raw
        label: 'Position'
        units: 'steps'
        dtype: float64
        rate: fast
        var: telescope.state["autofocus.tolerance"]
    # telescope temperatures
    telescope_temp_m1:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: fast
        var: telescope.state["temperature.primary"]
    telescope_temp_m2:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: fast
        var: telescope.state["temperature.secondary"]
    telescope_temp_m3:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: fast
        var: telescope.state["temperature.m3"]
    telescope_temp_ambient:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: fast
        var: telescope.state["temperature.ambient"]
#weather:
    #CDS (Clear Dark Skies)
    cds_cloud_index:
        ftype: raw
        label: 'CloudIndex'
        units: None
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSCLOUD'
    cds_trans_index:
        ftype: raw
        label: TransIndex
        units: None
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSTRANS'
    cds_seeing_index:
        ftype: raw
        label: SeeingIndex
        units: None
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSSEEING'
    cds_wind_index:
        ftype: raw
        label: WindIndex
        units: None
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSWINDI'
    ws_cds_max:
        ftype: raw
        label: Speed
        units: mph
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSWINDMAX'
    ws_cds_min:
        ftype: raw
        label: Speed
        units: mph
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSWINDMIN'
    cds_rh_index:
        ftype: raw
        label: RHIndex
        units: None
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSRHI'
    rh_cds_min:
        ftype: raw
        label: RH
        units: pct
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSRHMIN'
    rh_cds_max:
        ftype: raw
        label: RH
        units: pct
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSRHMAX'
    rh_cds_min:
        ftype: raw
        label: RH
        units: pct
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSRHMAX'
    cds_temp_index:
        ftype: raw
        label: TempIndex
        units: None
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSTEMPI'
    T_cds_min:
        ftype: raw
        label: T
        units: C
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSTEMPMIN'
    T_cds_max:
        ftype: raw
        label: T
        units: C
        dtype: float64
        rate: slow
        sys: weather
        var: 'weather.CDSTEMPMAX'
    cloud_min:
        ftype: raw
        label: 'Clouds-Min'
        units: None
        dtype: float64
        rate: slow
        var: 'weather.CLOUD_MIN'
    cloud_max:
        ftype: raw
        label: 'Clouds-Max'
        units: None
        dtype: float64
        rate: slow
        var: 'weather.CLOUD_MAX'
    # Palomar Command Server: PCS
    dome_is_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["is_connected"]'
    dome_reconnect_remaining_time:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["reconnect_remaining_time"]'
    dome_reconnect_timeout:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["reconnect_timeout"]'
    dome_last_command_reply:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["last_command_reply"]'
    dome_query_time:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: 'dome.state["query_timestamp"]'
    dome_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: slow
        var: 'dome.state["timestamp"]'
    dome_telescope_power:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Telescope_Power"]'
    dome_az_deg:
        ftype: raw
        label: 'Az'
        units: 'deg'
        dtype: float64
        rate: slow
        var: 'dome.state["Dome_Azimuth"]'
    dome_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Dome_Status_Num"]'
    dome_home_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Home_Status_Num"]'
    dome_shutter_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Shutter_Status_Num"]'
    dome_control_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Control_Status_Num"]'
    dome_close_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Close_Status_Num"]'
    dome_weather_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Weather_Status_Num"]'
    dome_sunlight_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Sunlight_Status_Num"]'
    dome_wetness_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Wetness_Status_Num"]'
    dome_dt_since_last_ok_to_open:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: hk
        var: 'dome.state["dt_since_last_ok_to_open"]'
    dome_ok_to_open:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: 'dome.state["ok_to_open"]'
    # things from dome_local
    dome_tracking_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: 'dome.state["tracking"]'
    dome_az_goal:
        ftype: raw
        label: 'Az'
        units: 'deg'
        dtype: float64
        rate: slow
        var: 'dome.state["az_goal"]'
    dome_az_error:
        ftype: raw
        label: 'Az'
        units: 'deg'
        dtype: float64
        rate: slow
        var: 'dome.state["az_error"]'
    
    # Weather info from dome
    Tdp_outside_threshold_pcs:
        ftype: raw
        label: 'DewPoint'
        units: 'C'
        dtype: float64
        rate: slow
        var: 'dome.state["Outside_Dewpoint_Threshold"]'
    windspeed_average_threshold_pcs:
        ftype: raw
        label: 'speed'
        units: 'mps'
        dtype: float64
        rate: slow
        var: 'dome.state["Average_Wind_Speed_Threshold"]'
    T_outside_pcs:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: 'dome.state["Outside_Temp"]'
    rh_outside_pcs:
        ftype: raw
        label: 'RH'
        units: 'pct'
        dtype: float64
        rate: slow
        var: 'dome.state["Outside_RH"]'
    Tdp_outside_pcs:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: 'dome.state["Outside_Dewpoint"]'
    pressure_pcs:
        ftype: raw
        label: 'speed'
        units: 'mps'
        dtype: float64
        rate: slow
        var: 'dome.state["Pressure"]'
    wind_direction_pcs:
        ftype: raw
        label: 'direction'
        units: 'deg'
        dtype: float64
        rate: slow
        var: 'dome.state["Wind_Direction"]'
    windspeed_average_pcs:
        ftype: raw
        label: 'speed'
        units: 'mps'
        dtype: float64
        rate: slow
        var: 'dome.state["Average_Wind_Speed"]'
    time_remaining_hold_pcs:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: slow
        var: 'dome.state["Weather_Hold_time"]'
    
    # Dome Faults
    Dome_Fault_Dome_Drive_Comm:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Dome_Drive_Comm"]'
    Dome_Fault_PLC_Comm:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_PLC_Comm"]'
    Dome_Fault_Weather_Comm:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Weather_Comm"]'
    Dome_Fault_Fire_Alarm:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Fire_Alarm"]'
    Dome_Fault_Door_Open:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Door_Open"]'
    Dome_Fault_ESTOP:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_ESTOP"]'
    Dome_Fault_Over_Temp:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Over_Temp"]'
    Dome_Fault_Drive_Internal_Voltage:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Drive_Internal_Voltage"]'
    Dome_Fault_Drive_Over_Voltage:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Drive_Over_Voltage"]'
    Dome_Fault_Drive_Over_Current:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Drive_Over_Current"]'
    Dome_Fault_Drive_Motor_Open_Winding:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Drive_Motor_Open_Winding"]'
    Dome_Fault_Drive_Bad_Encoder:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'dome.state["Fault_Drive_Bad_Encoder"]'
        
    # Palomar telemetry server: P48
    p48_is_online:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'weather.P48_Online'
    time_utc_p48:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: slow
        var: weather.P48_UTC_timestamp
    ws_avg_threshold_p48:
        ftype: raw
        label: 'windspeed'
        units: 'mps'
        dtype: float64
        rate: slow
        var: weather.P48_Windspeed_Avg_Threshold
    ws_gust_threshold_p48:
        ftype: raw
        label: 'windspeed'
        units: 'mps'
        dtype: float64
        rate: slow
        var: weather.P48_Gust_Speed_Threshold
    time_alarm_p48:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: slow
        var: weather.P48_Alarm_Hold_Time
    time_remaining_hold_p48:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: slow
        var: weather.P48_Remaining_Hold_Time
    rh_threshold_outside_p48:
        ftype: raw
        label: 'RH'
        units: 'pct'
        dtype: float64
        rate: slow
        var: weather.P48_Remaining_Hold_Time
    rh_threshold_inside_p48:
        ftype: raw
        label: 'RH'
        units: 'pct'
        dtype: float64
        rate: slow
        var: weather.P48_Inside_DewPt_Threshold
    wind_dir_current_p48:
        ftype: raw
        label: 'angle'
        units: 'degrees'
        dtype: float64
        rate: slow
        var: weather.P48_Wind_Dir_Current
    ws_current_p48:
        ftype: raw
        label: 'speed'
        units: 'm/s'
        dtype: float64
        rate: slow
        var: weather.P48_Windspeed_Current
    ws_avg_p48:
        ftype: raw
        label: 'speed'
        units: 'mps'
        dtype: float64
        rate: slow
        var: weather.P48_Windspeed_Average
    T_outside_air_p48:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: weather.P48_Outside_Air_Temp
    rh_outside_p48:
        ftype: raw
        label: 'RH'
        units: 'pct'
        dtype: float64
        rate: slow
        var: weather.P48_Outside_Rel_Hum
    Tdp_outside_p48:
        ftype: raw
        label: 'DewPoint'
        units: 'C'
        dtype: float64
        rate: slow
        var: weather.P48_Outside_DewPt
    T_inside_air_p48:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: weather.P48_Inside_Air_Temp
    rh_inside_p48:
        ftype: raw
        label: 'RH'
        units: 'pct'
        dtype: float64
        rate: slow
        var: weather.P48_Inside_Rel_Hum
    Tdp_inside_p48:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: weather.P48_Inside_DewPt
    wetness_p48:
        ftype: raw
        label: 'wetness'
        units: None
        dtype: int64
        rate: slow
        var: weather.P48_Wetness_Num
    status_p48:
        ftype: raw
        label: 'ready'
        units: None
        dtype: int64
        rate: slow
        var: weather.P48_Weather_Status_Num
    ### ROBOTIC DECISION MAKING STUFF ###
    ok_to_observe:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: slow
        var: 'robostate["ok_to_observe"]'
    robo_target_alt:
        ftype: raw
        label: 'Alt'
        units: 'Deg'
        dtype: float64
        rate: slow
        var: robostate["target_alt"]
    robo_target_az:
        ftype: raw
        label: 'Az'
        units: 'Deg'
        dtype: float64
        rate: slow
        var: robostate["target_az"]
    robo_target_ra_j2000_hours:
        ftype: raw
        label: 'RA'
        units: 'Hours'
        dtype: float64
        rate: slow
        #var: robostate["target_ra_j2000_hours"]
        var: robostate["j2000_ra_scheduled_hours"]
    robo_target_ra_j2000_deg:
        ftype: raw
        label: 'RA'
        units: 'Hours'
        dtype: float64
        rate: slow
        #var: robostate["target_ra_j2000_hours"]
        var: robostate["j2000_ra_scheduled_deg"]
    robo_target_dec_j2000_deg:
        ftype: raw
        label: 'DEC'
        units: 'Deg'
        dtype: float64
        rate: slow
        #var: robostate["target_dec_j2000_deg"]
        var: robostate["j2000_dec_scheduled_deg"]
    robo_pointing_ra_j2000_hours:
        ftype: raw
        label: 'RA'
        units: 'Hours'
        dtype: float64
        rate: slow
        #var: robostate["pointing_ra_j2000_hours"] # this isn't the dithered pointing
        var: robostate["target_ra_j2000_hours"] 
    robo_pointing_dec_j2000_deg:
        ftype: raw
        label: 'DEC'
        units: 'Deg'
        dtype: float64
        rate: slow
        #var: robostate["pointing_dec_j2000_deg"] # this isn't the dithered pointing
        var: robostate["target_dec_j2000_deg"]
    robo_obsHistID:
        ftype: raw
        label: 'ID'
        units: None
        dtype: int64
        rate: slow
        var: robostate["obsHistID"]
    robo_fieldID:
        ftype: raw
        label: 'ID'
        units: None
        dtype: int64
        rate: slow
        var: robostate["fieldID"]
    robo_programID:
        ftype: raw
        label: 'ID'
        units: None
        dtype: int64
        rate: slow
        var: robostate["programID"]
    robo_observatory_ready:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: robostate["observatory_ready"]    
    robo_observatory_stowed:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: robostate["observatory_stowed"]  
    robo_targetPriority:
        ftype: raw
        label: 'Value'
        units: None
        dtype: float64
        rate: hk
        var: robostate["targetPriority"]
    robo_maxAirmass:
        ftype: raw
        label: 'X'
        units: None
        dtype: float64
        rate: hk
        var: robostate["maxAirmass"]
    robo_validStart:
        ftype: raw
        label: 'MJD'
        units: None
        dtype: float64
        rate: hk
        var: robostate["validStart"]
    robo_validStop:
        ftype: raw
        label: 'MJD'
        units: None
        dtype: float64
        rate: hk
        var: robostate["validStop"]
    robo_dithnum:
        ftype: raw
        label: 'Value'
        units: None
        dtype: int64
        rate: hk
        var: robostate["dithnum"]
    robo_num_dithers:
        ftype: raw
        label: 'Value'
        units: None
        dtype: int64
        rate: hk
        var: robostate["num_dithers"]
    robo_ditherStepSize:
        ftype: raw
        label: 'Angle'
        units: 'as'
        dtype: float64
        rate: hk
        var: robostate["ditherStepSize"]
    robo_visitExpTime:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: hk
        var: robostate["visitExpTime"]
    ### LABJACK STUFF###
    Flow_LJ0_1:
        ftype: raw
        label: 'Flow'
        units: 'lpm'
        dtype: float64
        rate: hk
        var: labjacks.state['LJ0_Flow1']
    Flow_LJ0_2:
        ftype: raw
        label: 'Flow'
        units: 'lpm'
        dtype: float64
        rate: hk
        var: labjacks.state['LJ0_Flow2']
    Flow_LJ0_3: # Port C
        ftype: raw
        label: 'Flow'
        units: 'lpm'
        dtype: float64
        rate: hk
        var: labjacks.state['LJ0_Flow3']
    Flow_LJ0_4:
        ftype: raw
        label: 'Flow'
        units: 'lpm'
        dtype: float64
        rate: hk
        var: labjacks.state['LJ0_Flow4']
    Flow_LJ0_5:
        ftype: raw
        label: 'Flow'
        units: 'lpm'
        dtype: float64
        rate: hk
        var: labjacks.state['LJ0_Flow5']
    Flow_LJ0_6:
        ftype: raw
        label: 'Flow'
        units: 'lpm'
        dtype: float64
        rate: hk
        var: labjacks.state['LJ0_Flow6']
    #T_LJ0_AIN0:
    T_misc_powerbox:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN0']
    #T_LJ0_AIN1:
    T_powerbox_star:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN1']
    T_powerbox_port:
    #T_LJ0_AIN2:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN2']
    T_ob_star:
    #T_LJ0_AIN3:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN3']
    T_ob_center:
    #T_LJ0_AIN4:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN4']
    T_hx_sc:
    #T_LJ0_AIN5:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN5']
    T_heatsink_sc:
    #T_LJ0_AIN6:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN6']
    T_heatsink_sb:
    #T_LJ0_AIN7:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN7']
    T_heatsink_sa:
    #T_LJ0_AIN8:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN8']
    T_fpga_sb:
    #T_LJ0_AIN9:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN9']
    T_ob_port:
    #T_LJ0_AIN10:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN10']
    T_heatsink_pc:
    #T_LJ0_AIN11:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN11']
    T_heatsink_pb:
    #T_LJ0_AIN12:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN12']
    T_heatsink_pa:
    #T_LJ0_AIN13:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN13']
    T_LJ0_internal:
    #T_LJ0_AIN14:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ0_AIN14']
    
    # V_LJ0_AIN1:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN1']
    # V_LJ0_AIN2:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN2']
    # V_LJ0_AIN3:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN3']
    # V_LJ0_AIN4:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN4']
    # V_LJ0_AIN5:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN5']
    # V_LJ0_AIN6:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN6']
    # V_LJ0_AIN7:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN7']
    # V_LJ0_AIN8:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN8']
    # V_LJ0_AIN9:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN9']
    # V_LJ0_AIN10:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN10']
    # V_LJ0_AIN11:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN11']
    # V_LJ0_AIN12:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN12']
    # V_LJ0_AIN13:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN13']
    # V_LJ0_AIN14:
    #     ftype: raw
    #     label: 'Voltage'
    #     units: 'V'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['AIN14']
    # LJ0_FIO0:
    #     ftype: raw
    #     label: 'State'
    #     units: '-'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['FIO0']
    # LJ0_FIO1:
    #     ftype: raw
    #     label: 'State'
    #     units: '-'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['FIO1']
    # LJ0_FIO2:
    #     ftype: raw
    #     label: 'State'
    #     units: '-'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['FIO2']
    # LJ0_FIO3:
    #     ftype: raw
    #     label: 'State'
    #     units: '-'
    #     dtype: float64
    #     rate: slow
    #     var: labjacks.labjacks['lj0'].state['FIO3']
    
    # Rack Power Box Housekeeping and Control
    T_rackpow_fpa_star:
    #T_LJ1_AIN0:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ1_AIN0']
    T_rackpow_12v_misc:
    #T_LJ1_AIN1:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ1_AIN1']
    
    T_rackpow_fpa_port:
    #T_LJ1_AIN2:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ1_AIN2']
    T_rackpow_box:
    #T_LJ1_AIN3:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: labjacks.state['TEMP_LJ1_AIN3']
    fpa_port_power_disabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: labjacks.state['LJ1_FIO5']
    fpa_star_power_disabled:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: labjacks.state['LJ1_FIO4']
    
    # Viscam housekeeping

    ccd_tec_temp:
        ftype: raw
        label: 'status'
        units: None
        dtype: float64
        rate: slow
        var: 'ccd.state["tec_temp"]'
    ccd_tec_setpoint:
        ftype: raw
        label: 'status'
        units: None
        dtype: float64
        rate: slow
        var: 'ccd.state["tec_setpoint"]'
    ccd_pcb_temp:
        ftype: raw
        label: 'status'
        units: None
        dtype: float64
        rate: slow
        var: 'ccd.state["pcb_temp"]'
    ccd_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'ccd.state["tec_status"]'
    ccd_image_saved_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'ccd.state["imageSavedFlag"]'
    ccd_exptime:
        ftype: raw
        label: 'status'
        units: None
        dtype: float64
        rate: slow
        var: 'ccd.state["exptime"]'
    ccd_last_update_timestamp:
        ftype: raw
        label: 'status'
        units: None
        dtype: float64
        rate: slow
        var: 'ccd.state["last_update_timestamp"]'
    ccd_exposureTimeout:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: hk
        var: 'ccd.state["exposureTimeout"]'
    ccd_doing_exposure:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: hk
        var: 'ccd.state["doing_exposure"]'
    
    Pi_State:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'viscam.state["pi_status"]'
#    Pi_timestamp:
#        ftype: raw
#        label: 'time'
#        units: ctime
#        dtype: float64
#        rate: slow
#        var: 'viscam.state["pi_status_last_timestamp"]'
    Viscam_Shutter_State:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'viscam.state["shutter_state"]'
#    Viscam_Shutter_State_timestamp:
#        ftype: raw
#        label: 'time'
#        units: ctime
#        dtype: float64
#        rate: slow
#        var: 'viscam.state["shutter_state_last_timestamp"]'
    Viscam_Filter_Wheel_Position:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: 'viscam.state["fw_pos"]'
#    Viscam_Filter_Wheel_timestamp:
#        ftype: raw
#        label: 'time'
#        units: ctime
#        dtype: float64
#        rate: slow
#        var: 'viscam.state["filter_wheel_position_last_timestamp"]'

    # CHILLER STUFF
    chiller_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: chiller.state['UserSetpoint']
    chiller_setpoint_last_update_dt:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: chiller.state['last_poll_dt']['UserSetpoint']
    chiller_temperature:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: chiller.state['SystemDisplayValueStatus']
    chiller_is_running:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: chiller.state['UserRemoteStartStop']
    small_chiller_temperature:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: chiller.state['readSupplyT']
    small_chiller_ControlStatusMode:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: chiller.state['ControlStatusMode']
    small_chiller_isRunning:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: chiller.state['PumpStatusFlag']    
    small_chiller_AlarmStatusFlag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: chiller.state['AlarmStatusFlag']       
    small_chiller_WarningStatusFlag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: slow
        var: chiller.state['WarningStatusFlag']        
    small_chiller_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: slow
        var: chiller.state['readSetT'] 
    small_chiller_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: hk
        var: chiller.state['last_poll_time']['ControlStatusMode']
    small_chiller_dt_since_update:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: hk
        var: chiller.state['max_dt_since_last_update']
########### FILTER WHEEL API FIELDS ###########
    winter_fw_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: hk
        var: fwdict['winter'].state['timestamp']
    winter_fw_connected:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['is_connected']
    winter_fw_pos:
        ftype: raw
        label: 'pos'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['position']
    winter_fw_pos_goal:
        ftype: raw
        label: 'pos'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['pos_goal']
    winter_fw_encoder_pos:
        ftype: raw
        label: 'pos'
        units: 'milliinches'
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['encoder_pos']
    winter_fw_encoder_pos_goal:
        ftype: raw
        label: 'pos'
        units: 'milliinches'
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['encoder_pos_goal']
    winter_fw_filter_pos:
        ftype: raw
        label: 'num'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['filter_pos']
    winter_fw_filter_goal:
        ftype: raw
        label: 'num'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['filter_goal']
    winter_fw_is_moving:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['is_moving']
    winter_fw_is_homing:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['is_homing']
    winter_fw_is_homed:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: hk
        var: fwdict['winter'].state['homed']
    



        
########### CAMERA API FIELDS ##########
    winter_camera_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['timestamp']
    winter_camera_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['command_pass']
    winter_camera_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['command_active']
    winter_camera_exptime:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['exptime']
    winter_camera_doing_exposure:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['doing_exposure']
    winter_camera_connected:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['is_connected']
    winter_camera_command_timeout:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['command_timeout']
    winter_camera_command_sent_timestamp:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['command_sent_timestamp']
    winter_camera_command_elapsed_dt:
        ftype: raw
        label: 'Time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['command_elapsed_dt']
    winter_camera_autostart_requested:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['autoStartRequested']
    winter_camera_autostart_complete:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['autoStartComplete']
    winter_camera_autoshutdown_requested:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['autoShutdownRequested']
    winter_camera_autoshutdown_complete:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['autoShutdownComplete']
        
########### HOUSEKEEPING WINTER SENSORS ##########
# Bench Sensor        
    bench_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_timestamp']
    bench_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_fpa']
    bench_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_roic']    
    bench_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_sb']
    bench_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_pb']
    bench_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_p5v']
    bench_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_n3v']
    bench_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_tec']
    bench_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_I_tec']
    bench_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_FPGA_power_flag']   
    bench_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_FPGA_tecdisable_flag']   
    bench_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_FPGA_watchdog_flag']           
    bench_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_p5v_flag']     
    bench_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_n3v_flag']    
    bench_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_fpa_flag']    
    bench_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_roic_flag']    
    bench_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_pb_flag']    
    bench_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_sb_flag']            
    bench_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_tec_flag']    
    bench_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_I_tec_flag']  
    bench_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_tec_sp']
    bench_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_fpa_sp']    
    bench_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_tec_setpoint']  
    bench_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_pid']  
    bench_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_Terr_pid']  
    bench_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_Terr_pid_avg'] 
    bench_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_T_pid_slope'] 
    bench_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_pid_at_setpoint']
    bench_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_pid_ramp_status']  
    bench_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_pid_init_timestamp']
    bench_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_Kp'] 
    bench_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_Ki']  
    bench_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_Kd'] 
    bench_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_max_dacV'] 
    bench_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_tec_status']  
    bench_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_exptime']
    bench_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_connected']
    bench_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_sensor_daemon_connected']
    bench_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_startup_validated']
    bench_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['bench_new_img_flag']   
    bench_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_fpa']
    bench_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_roic']
    bench_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_pb']
    bench_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_V_sb']
    bench_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_command_active']
    bench_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['bench_command_pass']
# StarA Sensor        
    sa_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_timestamp']
    sa_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_fpa']
    sa_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_roic']    
    sa_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_sb']
    sa_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_pb']
    sa_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_p5v']
    sa_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_n3v']
    sa_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_tec']
    sa_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_I_tec']
    sa_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_FPGA_power_flag']   
    sa_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_FPGA_tecdisable_flag']   
    sa_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_FPGA_watchdog_flag']           
    sa_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_p5v_flag']     
    sa_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_n3v_flag']    
    sa_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_fpa_flag']    
    sa_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_roic_flag']    
    sa_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_pb_flag']    
    sa_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_sb_flag']            
    sa_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_tec_flag']    
    sa_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_I_tec_flag']  
    sa_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_tec_sp']
    sa_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_fpa_sp']    
    sa_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_tec_setpoint']  
    sa_tec_interim_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_tec_interim_setpoint']
    sa_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_pid']  
    sa_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_Terr_pid'] 
    sa_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_Terr_pid_avg']  
    sa_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_T_pid_slope'] 
    sa_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_pid_at_setpoint']
    sa_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_pid_ramp_status'] 
    sa_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_pid_init_timestamp']
    sa_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_Kp'] 
    sa_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_Ki']  
    sa_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_Kd'] 
    sa_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_max_dacV'] 
    sa_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_tec_status']  
    sa_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_exptime']
    sa_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_connected']
    sa_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_sensor_daemon_connected']
    sa_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_startup_validated']
    sa_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sa_new_img_flag']   
    sa_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_fpa']
    sa_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_roic']
    sa_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_pb']
    sa_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_V_sb']
    sa_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_command_active']
    sa_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sa_command_pass']
# StarB Sensor        
    sb_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_timestamp']
    sb_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_fpa']
    sb_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_roic']    
    sb_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_sb']
    sb_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_pb']
    sb_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_p5v']
    sb_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_n3v']
    sb_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_tec']
    sb_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_I_tec']
    sb_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_FPGA_power_flag']   
    sb_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_FPGA_tecdisable_flag']   
    sb_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_FPGA_watchdog_flag']           
    sb_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_p5v_flag']     
    sb_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_n3v_flag']    
    sb_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_fpa_flag']    
    sb_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_roic_flag']    
    sb_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_pb_flag']    
    sb_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_sb_flag']            
    sb_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_tec_flag']    
    sb_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_I_tec_flag']  
    sb_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_tec_sp']
    sb_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_fpa_sp']    
    sb_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_tec_setpoint'] 
    sb_tec_interim_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_tec_interim_setpoint'] 
    sb_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_pid'] 
    sb_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_Terr_pid'] 
    sb_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_Terr_pid_avg'] 
    sb_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_T_pid_slope']  
    sb_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_pid_at_setpoint']
    sb_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_pid_ramp_status'] 
    sb_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_pid_init_timestamp']
    sb_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_Kp'] 
    sb_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_Ki']  
    sb_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_Kd'] 
    sb_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_max_dacV'] 
    sb_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_tec_status']  
    sb_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_exptime']
    sb_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_connected']
    sb_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_sensor_daemon_connected']
    sb_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_startup_validated']
    sb_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sb_new_img_flag']   
    sb_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_fpa']
    sb_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_roic']
    sb_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_pb']
    sb_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_V_sb']
    sb_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_command_active']
    sb_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sb_command_pass']
# StarC Sensor        
    sc_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_timestamp']
    sc_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_fpa']
    sc_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_roic']    
    sc_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_sb']
    sc_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_pb']
    sc_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_p5v']
    sc_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_n3v']
    sc_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_tec']
    sc_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_I_tec']
    sc_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_FPGA_power_flag']   
    sc_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_FPGA_tecdisable_flag']   
    sc_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_FPGA_watchdog_flag']           
    sc_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_p5v_flag']     
    sc_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_n3v_flag']    
    sc_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_fpa_flag']    
    sc_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_roic_flag']    
    sc_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_pb_flag']    
    sc_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_sb_flag']            
    sc_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_tec_flag']    
    sc_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_I_tec_flag']  
    sc_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_tec_sp']
    sc_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_fpa_sp']    
    sc_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_tec_setpoint']  
    sc_tec_interim_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_tec_interim_setpoint']
    sc_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_pid']   
    sc_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_Terr_pid']  
    sc_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_Terr_pid_avg']
    sc_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_T_pid_slope']
    sc_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_pid_at_setpoint']
    sc_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_pid_ramp_status'] 
    sc_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_pid_init_timestamp']
    sc_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_Kp'] 
    sc_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_Ki']  
    sc_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_Kd'] 
    sc_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_max_dacV'] 
    sc_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_tec_status']  
    sc_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_exptime']
    sc_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_connected']
    sc_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_sensor_daemon_connected']
    sc_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_startup_validated']
    sc_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['sc_new_img_flag']   
    sc_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_fpa']
    sc_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_roic']
    sc_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_pb']
    sc_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_V_sb'] 
    sc_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_command_active']
    sc_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['sc_command_pass']       
# PortA Sensor        
    pa_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_timestamp']
    pa_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_fpa']
    pa_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_roic']    
    pa_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_sb']
    pa_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_pb']
    pa_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_p5v']
    pa_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_n3v']
    pa_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_tec']
    pa_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_I_tec']
    pa_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_FPGA_power_flag']   
    pa_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_FPGA_tecdisable_flag']   
    pa_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_FPGA_watchdog_flag']           
    pa_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_p5v_flag']     
    pa_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_n3v_flag']    
    pa_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_fpa_flag']    
    pa_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_roic_flag']    
    pa_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_pb_flag']    
    pa_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_sb_flag']            
    pa_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_tec_flag']    
    pa_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_I_tec_flag']  
    pa_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_tec_sp']
    pa_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_fpa_sp']    
    pa_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_tec_setpoint']  
    pa_tec_interim_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_tec_interim_setpoint']
    pa_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_pid'] 
    pa_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_Terr_pid']
    pa_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_Terr_pid_avg']  
    pa_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_T_pid_slope'] 
    pa_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_pid_at_setpoint']
    pa_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_pid_ramp_status']
    pa_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_pid_init_timestamp']
    pa_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_Kp'] 
    pa_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_Ki']  
    pa_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_Kd'] 
    pa_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_max_dacV'] 
    pa_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_tec_status']  
    pa_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_exptime']
    pa_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_connected']
    pa_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_sensor_daemon_connected']
    pa_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_startup_validated']
    pa_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pa_new_img_flag']     
    pa_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_fpa']
    pa_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_roic']
    pa_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_pb']
    pa_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_V_sb']
    pa_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_command_active']
    pa_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pa_command_pass']
# PortB Sensor        
    pb_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_timestamp']
    pb_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_fpa']
    pb_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_roic']    
    pb_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_sb']
    pb_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_pb']
    pb_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_p5v']
    pb_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_n3v']
    pb_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_tec']
    pb_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_I_tec']
    pb_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_FPGA_power_flag']   
    pb_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_FPGA_tecdisable_flag']   
    pb_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_FPGA_watchdog_flag']           
    pb_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_p5v_flag']     
    pb_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_n3v_flag']    
    pb_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_fpa_flag']    
    pb_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_roic_flag']    
    pb_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_pb_flag']    
    pb_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_sb_flag']            
    pb_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_tec_flag']    
    pb_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_I_tec_flag']  
    pb_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_tec_sp']
    pb_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_fpa_sp']    
    pb_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_tec_setpoint']  
    pb_tec_interim_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_tec_interim_setpoint']
    pb_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_pid'] 
    pb_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_Terr_pid'] 
    pb_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_Terr_pid_avg'] 
    pb_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_T_pid_slope'] 
    pb_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_pid_at_setpoint']
    pb_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_pid_ramp_status']
    pb_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_pid_init_timestamp']
    pb_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_Kp'] 
    pb_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_Ki']  
    pb_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_Kd'] 
    pb_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_max_dacV']   
    pb_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_tec_status']  
    pb_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_exptime']
    pb_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_connected']
    pb_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_sensor_daemon_connected']
    pb_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_startup_validated']
    pb_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pb_new_img_flag']   
    pb_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_fpa']
    pb_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_roic']
    pb_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_pb']
    pb_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_V_sb']
    pb_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_command_active']
    pb_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pb_command_pass']
# PortC Sensor        
    pc_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_timestamp']
    pc_T_fpa:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_fpa']
    pc_T_roic:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_roic']    
    pc_T_sb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_sb']
    pc_T_pb:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_pb']
    pc_V_p5v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_p5v']
    pc_V_n3v:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_n3v']
    pc_V_tec:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_tec']
    pc_I_tec:
        ftype: raw
        label: 'Current'
        units: 'I'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_I_tec']
    pc_FPGA_power_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_FPGA_power_flag']   
    pc_FPGA_tecdisable_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_FPGA_tecdisable_flag']   
    pc_FPGA_watchdog_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_FPGA_watchdog_flag']           
    pc_V_p5v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_p5v_flag']     
    pc_V_n3v_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_n3v_flag']    
    pc_T_fpa_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_fpa_flag']    
    pc_T_roic_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_roic_flag']    
    pc_T_pb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_pb_flag']    
    pc_T_sb_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_sb_flag']            
    pc_V_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_tec_flag']    
    pc_I_tec_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_I_tec_flag']  
    pc_V_tec_sp:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_tec_sp']
    pc_T_fpa_sp:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_fpa_sp']    
    pc_tec_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_tec_setpoint']  
    pc_tec_interim_setpoint:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_tec_interim_setpoint']
    pc_T_pid:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_pid']  
    pc_T_pid_err:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_Terr_pid'] 
    pc_T_pid_err_avg:
        ftype: raw
        label: 'T'
        units: 'C'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_Terr_pid_avg'] 
    pc_T_pid_err_slope:
        ftype: raw
        label: 'dTdt'
        units: 'Cps'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_T_pid_slope'] 
    pc_pid_at_setpoint:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_pid_at_setpoint']
    pc_pid_ramp_status:
        ftype: raw
        label: 'Status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_pid_ramp_status'] 
    pc_pid_init_timestamp:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_pid_init_timestamp']
    pc_Kp:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_Kp'] 
    pc_Ki:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_Ki']  
    pc_Kd:
        ftype: raw
        label: 'Coeff'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_Kd'] 
    pc_max_dacV:
        ftype: raw
        label: 'Volt'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_max_dacV'] 
    pc_tec_status:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_tec_status']  
    pc_exptime:
        ftype: raw
        label: 'time'
        units: 's'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_exptime']
    pc_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_connected']
    pc_sensor_daemon_connected:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_sensor_daemon_connected']
    pc_startup_validated:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_startup_validated']
    pc_new_img_flag:
        ftype: raw
        label: 'status'
        units: None
        dtype: int64
        rate: 'hk'
        var: camdict['winter'].state['pc_new_img_flag']   
    pc_V_fpa:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_fpa']
    pc_V_roic:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_roic']
    pc_V_pb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_pb']
    pc_V_sb:
        ftype: raw
        label: 'Voltage'
        units: 'V'
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_V_sb']
    pc_command_active:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_command_active']
    pc_command_pass:
        ftype: raw
        label: 'Status'
        units: None
        dtype: float64
        rate: 'hk'
        var: camdict['winter'].state['pc_command_pass']
    
   
