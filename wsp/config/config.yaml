# config file for WINTER

########## SITE PARAMETERS ##########
site:
    # lat/lon. expects a format that can be read with astropy.coordinates.Angle()
    lat: '33d21m21.6s'
    lon: '-116d51m46.8s'
    # height (site altitude). height is a number, units are something that can be parsed with astropy.units.Unit()
    height: 1706
    height_units: 'm'
    timezone: 'America/Los_Angeles'


########## SERIAL BUS DEVICES ##########
# USB-Serial Devices
usb_serial_dev:
    chiller: '/dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AQ00T8I9-if00-port0'
    steppers: '/dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AG0JG9J3-if00-port0'

########## DAEMONS ##########
# pyro5 nameserver default location
pyro5_ns_default_addr: 192.168.1.10

########## FITS IMAGE DIRECTORY ##########
image_directory: 'data/images'
#image_prefix: 'viscam_'
image_data_link_directory: 'data'
image_data_link_name: 'tonight_images.lnk'
image_last_taken_link: 'last_image.lnk'

########## FITS HEADER THINGS ##########
fits_header:
    default_observer: 'WINTER roboOperator'

########## WINTERCMD COMMANDING ##########
wintercmd_server_addr: '0.0.0.0'
wintercmd_server_port: 7000
wintercmd_server_timeout: 0.1
# trusted hosts (whitelist). allow commands from these machines
wintercmd_trusted_hosts:
    -127.0.0.1
    -127.0.1.1
    -192.168.1.10
    -192.168.1.11
    -192.168.1.20
    
############# VISCAM RASPI ###########################
# add Raspberry Pi URL to communicate with the VISCAM
# shutter and filter wheel
# TODO, move this somewhere cleaner
viscam_url: 'http://192.168.1.228:5001/'

viscam_platescale_as: 0.466

viscam_accessories_reboot_param:
    reboot_log_path: 'data/summer_accessories_reboot_log.json'
    reboot_graceperiod_hours: 6
    

########## SCHEDULING ##########
# location of the schedule files (home + this directory)
scheduleFile_directory: 'data/schedules'
#scheduleFile_nightly_prefix: 'WINTER_NightlySchedule_'
scheduleFile_nightly_prefix: 'nightly_'
scheduleFile_nightly_link_directory: 'data'
scheduleFile_nightly_link_name: 'nightly_schedule.lnk'

# ToO: Target of Opportunity Scheduling
scheduleFile_ToO_directory: 'data/schedules/ToO'


# observation log
obslog_directory: 'data'
obslog_database_name: 'WINTER_ObsLog' #.db is implied



    



# commanding (seconds)
cmd_timeout: 10.0
cmd_status_dt: 0.5 # time between checks to see if status is verified
cmd_satisfied_N_samples: 3 # number of samples to make sure that status is verified

########### ALERTS ##########
# base directory is wsp path
alert_handler:
    auth_config_file: 'credentials/authentication.yaml'
    user_config_file: 'credentials/alert_list.yaml'
    alert_config_file: 'config/alert_config.yaml'



########### ROBO MANAGER ###########
# read this as: send the CMD when the current value of sun_alt or time is COND than the specified value.
# eg, if type is sun and cond is >= : then send the cmd when sun_alt >= VAL, set to -18
#max_sun_alt_for_observing: -18
max_sun_alt_for_observing: -7
sun_alt_to_startup_cameras: 10.0
sun_alt_to_shutdown_cameras: -5.0


robotic_manager_triggers:
    timeformat: '%H:%M:%S.%f'
    triggers:
        daytest:
            conds:
                cond1:
                    type: 'sun'
                    val: 0
                    cond: '>'
                cond2:
                    type: 'time'
                    val: '13:00:0.0'
                    cond: '>'        
            sundir: 0
            repeat_on_restart: True
            cmd: xyzzy
        restart_winter_camera_daemon:
            conds:
                cond1:
                    type: 'sun'
                    val: 0
                    cond: '>'
                cond2:
                    type: 'time'
                    val: '9:00:0.0'
                    cond: '>'
                cond3:
                    type: 'time'
                    val: '10:00:0.0'
                    cond: '<'
            sundir: 0
            repeat_on_restart: False
            cmd: 'killCameraDaemon'
        fans_on:
            conds:
                cond1:
                    type: 'time'
                    val: '14:00:0.0'
                    cond: '>'
            sundir: -1
            repeat_on_restart: False
            cmd: 'mount_fans_on'
        chiller_on:
            conds:
                cond1:
                    type: 'time'
                    val: '14:00:0.0'
                    cond: '>'
            sundir: -1
            repeat_on_restart: False
            cmd: 'chiller_start'             
        load_schedule:
            conds:
                cond1:
                    type: 'sun'
                    val: 1.0
                    cond: '<'
            sundir: 0
            repeat_on_restart: True
            cmd: 'load_nightly_schedule'
        start_obs:
            conds:
               cond1:
                   type: 'sun'
                   val: 1000.0 # this just forces robo_run to be called at all times, should help avoid incomplete shutdowns
                   cond: '<'
            repeat_on_restart: True
            sundir: 0
            cmd: 'robo_run'
        fans_off:
            conds:
                cond1:
                    type: 'sun'
                    val: 1
                    cond: '>'
            nextmorning: True
            repeat_on_restart: False
            sundir: 1
            cmd: 'mount_fans_off'
        winter_camera_shutdown:
            conds:
                cond1:
                    type: 'sun'
                    val: 3
                    cond: '>'
                cond2:
                    type: 'sun'
                    val: 40
                    cond: '>'
                cond3:
                    type: 'time'
                    val: '7:30:00.0'
                    cond: '>'
            nextmorning: True
            repeat_on_restart: False
            sundir: 1
            cmd: 'shutdownCamera --winter'
        kill:
            conds:
                cond1:
                    type: 'time'
                    #val: '7:59:30.0'
                    val: '7:59:54.0'
                    cond: '>'
                cond2:
                    type: 'sun'
                    val: 40
                    cond: '<'
                cond3:
                    type: 'sun'
                    val: 5
                    cond: '>'
                cond4:
                    type: 'time'
                    val: '12:01:0.0'
                    cond: '<'
            nextmorning: True
            repeat_on_restart: False
            sundir: 1
            cmd: 'kill'

########### TELESCOPE SET UP ##########
telescope:
    host: "thor"
    simhost: "localhost"
    comm_port: 8220
    home_alt_degs: 45.0
    home_az_degs: 220 
    min_alt: 15
    max_alt: 85.0

    ports:
        # Port 1: WINTER
        default: 1 # default port for startup
        1: 
            name: 'winter'
            rotator:
                field_angle_zeropoint: 65.0 
                home_degs: 65.5
                max_degs: 120.0
                min_degs: -90.0
            cameras:
                winter:
                    pointing_model_file: "pointing_model_winter_20250529_downselected.pxp"

        # Port 2: SUMMER, SPRING
        2:
            name: 'summer'
            rotator:
                field_angle_zeropoint: 155.0 
                home_degs: -25.0
                max_degs: 160.0
                min_degs: -210.0
            cameras:
                spring:
                    pointing_model_file: "pointing_model_spring_20251022.pxp"

                

########## CAMERA SET UP ##########
multi_camera_enabled: True
active_cameras:
    - "winter"
    #- "summer"
    - "spring"

########## TELEMETRY SERVERS ##########
# define telemetry servers
telemetry_server:
    addr:  '198.202.125.214'
    port: 4698
    cmd: 'WEATHER_JSON'
    endchar: '}]'
    timeout: 0.1

command_server:
    #addr: '198.202.125.142'
    addr: '10.200.98.100'
    port: 62000
    cmd: 'status?'
    endchar: '}'
    timeout: 0.25
    
telescope_shutter:
    addr: '192.168.1.12'
    port: 9897
    cmd: "shutterstate"
    endchar: '\n'
    timeout: 0.25
    Status_Dict:
        0 : "OPEN"
        1 : "CLOSED"
        2 : "OPENING"
        3 : "CLOSING"
        4 : "ERROR"
        5 : "PARTLY_OPEN"
    
########### LOGGING SET UP ##########
# where to put the log. base directory is home
log_directory: 'data/log'
log_link_directory: 'data'
log_link_name: 'winter.log'

########### DOME SET UP ##########
# dome tracking error allowed in degrees
dome_tracking_error_threshold: 0.1

dome_home_az_degs: 40.0 #169

Dome_Status_Dict:
    ## Palomar Command Server
    Dome_Status:
        'OFF': 0
        'STOPPED': 1
        'STOWED': 2
        'GO_TO': 3
        'UNKNOWN': -1
        'FAULT': -2
        'HOMING' : 4
    Home_Status:
        'READY': 1
        'NOT_READY' : 0
    
    Shutter_Status:
        'OPEN': 1
        'OPENING': 5
        'CLOSED': -1
        'CLOSING': -5
        'STOPPED': 0
        'FAULT': -10

    Control_Status:
        'AVAILABLE': 0
        'REMOTE': 1
        'CONSOLE': 2
        'MANUAL': 3

    Close_Status:
        'READY': 1
        'NOT_READY': 0

    Weather_Status:
        'READY': 1
        'NOT_READY': 0
        
    Sunlight_Status:
        'READY': 1
        'NOT_READY': 0
        
    Wetness_Status:
        'READY': 1
        'NOT_READY': 0
        
    Telescope_Power:
        'ON' : 1
        'OFF': 0
        'FAULT': -1
        
    Faults:
        0x1:
            msg: 'Dome Drive Communication Lost'
            field : 'Fault_Dome_Drive_Comm'
        0x2: 
            msg: 'PLC Communication Lost'
            field: 'Fault_PLC_Comm'
        0x4: 
            msg: 'Weather Communication Lost'
            field: 'Fault_Weather_Comm'
        0x8: 
            msg: 'Fire Alarm'
            field: 'Fault_Fire_Alarm'
        0x10: 
            msg: 'Door Open'
            field: 'Fault_Door_Open'
        0x20: 
            msg: 'ESTOP'
            field: 'Fault_ESTOP'
        0x40: 
            msg: 'Drive Over Temp'
            field: 'Fault_Over_Temp'
        0x80:
            msg: 'Drive Internal Voltage'
            field: 'Fault_Drive_Internal_Voltage'
        0x100: 
            msg: 'Drive Over Voltage'
            field: 'Fault_Drive_Over_Voltage'
        0x200: 
            msg: 'Drive Over Current'
            field: 'Fault_Drive_Over_Current'
        0x400: 
            msg: 'Drive Motor Open Winding'
            field: 'Fault_Drive_Motor_Open_Winding'
        0x800: 
            msg: 'Drive Bad Encoder'
            field: 'Fault_Drive_Bad_Encoder'

########### WEATHER SET UP ##########

# weather limits
weather_limits:
    TEMP_OUT:
        MIN: -20
        MAX: 50
    TEMP_IN:
        MIN: -20
        MAX: 50
    RH_OUT:
        MIN: -100
        MAX: 100
    RH_IN:
        MIN: -100
        MAX: 100
    WIND_GUST:
        MIN: 0
        MAX: 35
    WIND_SPEED:
        MIN: 0
        MAX: 30
    DEWPOINT_IN:
        MIN: -100
        MAX: 100
    DEWPOINT_OUT:
        MIN: -100
        MAX: 100

########### EPHEMERIS SET UP ##########
ephem:
    # note that changing these will not update the housekeeping fields, that must be done manually
    min_target_separation:
        moon: 10.0
        mercury: 5
        venus: 5
        mars: 5
        jupiter: 5
        saturn: 5


########### CALIBRATION DEFAULTS ###########
cal_params:
    prog_params:
        # parameters for tagging the cals with a trackable 
        focus:
            progID: 4
            progName: 2024A015
            progPI: Lourie
        cals:
            progID: 4
            progName: 2023A014
            progPI: Lourie
    cal_log:
        dirname: 'data/cals'
        filename: 'cal_log'   
        linkdir: 'data'
        linkname: 'cal_log.lnk'    
    winter:
        cals_to_do:
            - "robo_do_darks"
            - "domeflats"

        darks:
            n_imgs: 5
            exptimes:
                - 0.35
                - 0.46
                - 0.57
                - 30.0
                - 60.0
                - 120.0
            filterID: 'dark'
            
        bias:
            n_imgs: 0
            filterID: 'dark'
        flats:
            min_sunalt: -9.0
            max_sunalt: -5.0
            n_imgs: 2
            filterIDs:
                - 'J'
                - 'Y'
                - 'Hs'
            exptime:
                min: 2.5
                max: 120.0
                J: 'model'
                Y: 'model'
                Hs: 'model'
            model:
                goal_counts: 30000
                dark_rate: 100
                Hs:
                    #a: 24.80760462
                    #n: -0.91458396
                    #scale: 1.0
                    a: 343.62927408
                    n: -2.19398583
                    scale: 1.0
                J:
                    a: 343.62927408
                    n: -2.19398583
                    scale: 0.5
                Y:
                    #a: 383.23066531
                    #n: -2.16061927
                    #scale: 1.0
                    a: 343.62927408
                    n: -2.19398583
                    scale: 1.5
        domeflats:
            target:
                az: 270 #90.0
                alt: 35 #75.0
                
            n_imgs: 10
            filterIDs:
                - 'J'
                - 'Y'
                - 'Hs'
            exptime:
                J: 
                    #- 1.0
                    #- 3.0
                    - 0.35
                Y: 
                    #- 1.6
                    #- 4.8
                    - 0.57
                Hs: 
                    #- 1.35
                    #- 4.0
                    - 0.46
                    
        triggers:
            darks:
                conds:
                    cond1:
                        type: 'time'
                        val: '0:00:0.1'
                        cond: '>'
                    cond2:
                        type: 'sun'
                        val: -20.0
                        cond: '<'
                repeat_on_restart: False
                nextmorning: True
                sundir: 0
                cmd: 'robo_do_darks --winter'
            domeflats:
                conds:
                    cond1:
                        type: 'sun'
                        val: 5.0
                        cond: '<'
                    # cond2:
                    #     type: 'sun'
                    #     val: -10.0
                    #     cond: '>'
                repeat_on_restart: False
                nextmorning: False
                sundir: -1
                cmd: 'robo_do_calibration -df'
    spring:
        darks:
            n_imgs: 5
            exptimes:
                - 10.0
                - 30.0
                - 60.0
            filterID: 'J'
        triggers:
            darks:
                conds:
                    cond1:
                        type: 'time'
                        val: '0:00:0.1'
                        cond: '>'
                    cond2:
                        type: 'sun'
                        val: -20.0
                        cond: '<'
                repeat_on_restart: False
                nextmorning: True
                sundir: 0
                cmd: 'robo_do_darks --spring'
    summer:
        darks:
            n_imgs: 5
            exptimes:
                - 30
            filterID: 'r'
        bias:
            n_imgs: 5
            filterID: 'r'
        flats:
            min_sunalt: -7.0
            max_sunalt: -5.0
            n_imgs: 2
            filterIDs:
                - 'u'
                - 'g'
                - 'r'
                - 'i'
            exptime:
                min: 2.5
                max: 60.0
                u: model
                g: model
                r: model
                i: model
            model:
                goal_counts: 40000
                model: 0
                u:
                    a: 73.40
                    n: -1.23
                    scale: 1.6
                g:
                    a: 75.08
                    n: -1.23
                    scale: 0.5
                r:
                    a: 75.08
                    n: -1.23
                    scale: 1.0
                i:
                    a: 73.40
                    n: -1.23
                    scale: 1.6
                
########### FOCUSER LOOP PARAM ###########
focus_loop_param:
    sweep_param:
        narrow:
            total_throw: 500
            nsteps: 6
        wide:
            total_throw: 800
            nsteps: 12
    #micron_interval: 100
    focus_filters:
        winter-deep:
            - 'J'
        winter:
            - 'J'
        summer:
            - 'r'

    targets:
        #targ0:
        #    target_type: object
        #    target: 'm39'
        targ1:
            target_type: altaz
            target: '79 10'
        targ2:
            target_type: altaz
            target: '75 280'
        targ3:
            target_type: altaz
            target: '75 290'
        targ4:
            target_type: altaz
            target: '75 300'
        targ5:
            target_type: altaz
            target: '40 304'

    focus_error_max: 50
    focus_log_path: 'data/focusing/focus_log.json'
    focus_graceperiod_hours: 6
    max_focus_attempts: 2

    results_log_parent_dir: 'data/focusing'
    results_log_dir: 'results'
    results_log_last_link: 'last_focus_results.lnk'
    results_plot_last_link: 'last_focus_plot.lnk'
    focus_model_params: 'focus_model_params.json'

########### FILTERS AND FILTER WHEELS ###########
filters:
    spring:

        u:
            name: "SDSS u'"
            active: True
        g:
            name: "SDSS g'"
            active: True
        r:
            name: "SDSS r'"
            active: True
        i:
            name: "SDSS i'"
            active: True
        Y:
            name: "MKO Y-band (Omega)"
            active: True
        J:
            name: "MKO J-band (Omega)"
            active: True
    summer:
        u:
            name: "SDSS u'"
            active: True
        g:
            name: "SDSS g'"
            active: True
        r:
            name: "SDSS r'"
            active: True
        i:
            name: "SDSS i'"
            active: True

    winter:
        J:
            name: "MKO J-band (Asahi)"
            active: True
        Y:  
            name: "MKO Y-band (Asahi)"
            active: True
        Hs: 
            name: "MKO Hs-band (Asahi)"
            active: True
        dark:
            name: "Dark Mirror"
            active: True
        

filter_wheels:
    winter-deep:
        positions:
            1: 'u'
            2: 'g'
            3: 'r'
            4: 'i'
            5: 'Y'
            6: 'J'
            7: 'EMPTY'
    summer:
        positions:
            1: 'u'
            2: 'EMPTY'
            3: 'g'
            4: 'EMPTY'
            5: 'r'
            6: 'EMPTY'
            7: 'i'
    winter:
        positions:
            1: 'dark'
            2: 'J'
            3: 'Y'
            4: 'Hs'

########### POINTING MODEL PARAMETERS ###########
# Construct a grid of 3 x 6 = 18 Alt-Az points
# ranging from 20 to 80 degrees Altitude, and from
# 5 to 355 degrees Azimuth.
#points = create_point_list(3, 20, 80, 6, 5, 355)
pointing_model:
    grid_points:
        num_alt: 3
        min_alt: 20
        max_alt: 80
        num_az: 6
        min_az: 5
        max_az: 355
    # current default pointing model to use
    default_pointing_model_file: "pointing_model_winter_20250529_downselected.pxp"
    
    # filepath of pointlist to use by default in home directory
    #default_pointlist: 'data/pointing_model/25_point_denser_near_zenith_spaced_pointing_model_points.txt'
    default_pointlist: 'data/pointing_model/200_point_denser_near_zenith_spaced_pointing_model_points.txt'
    # path prefix is HOME
    ps3cli_path: ps3cli
    catalog_path: Kepler
    

########### GENERAL OBSERVING STRATEGY ###########
# x_pixel: x pixel position on requested board. This assumes the X pixel value
#     when an individual board image is opened in DS9.
# y_pixel: y pixel position on requested board. This assumes the Y pixel value
#     when an individual board image is opened in DS9.

# # dither table
# # base directory is wsp path
# dither_file: 'config/dither_list.conf'
# dither_defaults:
# # for each camera specifiy:
# # ditherNumber (number of dithers to do)
# # ditherStepSize (box width for random dither to be selected from)
#     camera:
#         summer:
#             ditherNumber: 5
#             ditherStepSize: 15
#         winter:
#             ditherNumber: 5
#             ditherStepSize: 15


observing_parameters:
    winter:
        #offset_pointings:
        #    - coords:
        #        dRA: 500
        #        dDec: 1000
        dithers: 
            ditherNumber: 8 #10 #5
            ditherMinStep_as: 75 #10
            ditherMaxStep_as: 90 #15
        best_position:
            board_id: 4
            addr: "pc"
            x_pixel: 1475 #570
            y_pixel: 550 #530
        base_position:
            board_id: 3 #0
            addr: "pb"
            x_pixel: 1965 #1864 #1788
            y_pixel: 500 #530 #533
        pixscale: 1.11
        x_pixels: 1984
        y_pixels: 1096
    
    summer:
        best_position:
            x_pixel: 0
            y_pixel: 0
        base_position:
            x_pixel: 0
            y_pixel: 0
            
        pixscale: 0.411
        x_pixels: 1280
        y_pixels: 1024

    summer:
        best_position:
            x_pixel: 0
            y_pixel: 0
        base_position:
            x_pixel: 0
            y_pixel: 0
            
        pixscale: 0.466
        x_pixels: 2048
        y_pixels: 2048
        

# default value for housekeeping fields
default_value: -999

### Labjack Definitions ###
labjacks:
    LJ0:
        config: 'labjack0_config.yaml'
    LJ1:
        config: 'labjack1_config.yaml'


